import random
import telebot
import requests
from telebot import types
import bot2_db

TOKEN = '7844995'
bot = telebot.TeleBot(TOKEN)

user_answers = {}


def get_random_word(user_id):
    words = bot2_db.get_words_from_db(user_id)
    if not words:
        return None, None, None

    target = random.choice(words)
    other_options = random.sample([w[0] for w in words if w[0] != target[0]], min(3, len(words) - 1))

    return target[0], target[1], other_options


def send_random_word(message):

    user_id = message.from_user.id
    target_word, russian_word, other_words = get_random_word(user_id)

    if not target_word:
        bot.send_message(message.chat.id, "–í–∞—à —Å–ª–æ–≤–∞—Ä—å –ø—É—Å—Ç. –î–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—ã–µ —Å–ª–æ–≤–∞!")
        return

    user_answers[user_id] = target_word

    markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    buttons = [types.KeyboardButton(word) for word in [target_word] + other_words]
    random.shuffle(buttons)

    markup.add(*buttons)

    markup.add(
        types.KeyboardButton('‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ'),
        types.KeyboardButton('üîô –£–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–æ')
    )
    markup.add(types.KeyboardButton('‚è≠ –î–∞–ª—å—à–µ'))

    bot.send_message(message.chat.id, f'–£–≥–∞–¥–∞–π –ø–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤–∞: {russian_word}', reply_markup=markup)


def get_usage_example(word):

    url = f"https://api.dictionaryapi.dev/api/v2/entries/en/{word}"
    response = requests.get(url)

    if response.status_code == 200:
        data = response.json()
        for meaning in data[0]["meanings"]:
            for definition in meaning["definitions"]:
                if "example" in definition:
                    return definition["example"]

    return None


@bot.message_handler(commands=['start', 'cards'])
def start_bot(message):
    user_id = message.from_user.id
    if not bot2_db.user_exists(user_id):
        bot2_db.add_user(user_id)
        bot.send_message(
            message.chat.id,
            f"–ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.first_name}</b>.\n"
            "–î–∞–≤–∞–π –ø–æ–ø—Ä–∞–∫—Ç–∏–∫—É–µ–º—Å—è –≤ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ!\n"
            "–¢—ã –º–æ–∂–µ—à—å —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ—é –±–∞–∑—É —Å–ª–æ–≤ –∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å –Ω–µ–π.\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏:\n"
            "<i>‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ</i>,\n"
            "<i>üîô –£–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–æ</i>.\n"
            "\n"
            "–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ /help, –µ—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å.\n"
            "–£–¥–∞—á–∏! üòä",
            parse_mode="HTML",
        )
    else:
        bot.send_message(
            message.chat.id,
            f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ, <b>{message.from_user.first_name}</b>!\n"
            "–¢—ã –º–æ–∂–µ—à—å –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å—Å—è —Å —Ç–≤–æ–∏–º–∏ —Å–ª–æ–≤–∞–º–∏.",
            parse_mode="HTML",
        )

    send_random_word(message)


@bot.message_handler(commands=["help"])
def help_bot(message):
    bot.send_message(
        message.chat.id,
        "<b>–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—ã</b> üí¨:\n"
        "/start –∏ /cards - –Ω–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ\n"
        "\n"
        "<b>–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏:</b>\n"
        "<i>‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ\n</i>"
        "<i>üîô –£–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–æ\n</i>"
        "<i>‚è≠ –î–∞–ª—å—à–µ\n</i>"
        "\n"
        "–°–æ–∑–¥–∞–π —Å–≤–æ—é —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é –±–∞–∑—É —Å–ª–æ–≤ –∏ —Ç—Ä–µ–Ω–∏—Ä—É–π—Å—è!\n"
        "–£–¥–∞—á–∏! üòä",
        parse_mode="HTML",
    )


@bot.message_handler(func=lambda message: message.text == '‚è≠ –î–∞–ª—å—à–µ')
def next_word(message):
    send_random_word(message)


@bot.message_handler(func=lambda message: message.text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ")
def add_word(message):
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∞–Ω–≥–ª–∏–π—Å–∫–æ–µ —Å–ª–æ–≤–æ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: ")
    bot.register_next_step_handler(message, save_english_word)


def save_english_word(message):
    english_word = message.text
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–µ–≤–æ–¥ —ç—Ç–æ–≥–æ —Å–ª–æ–≤–∞: ')
    bot.register_next_step_handler(message, lambda msg: save_translation(msg, english_word))


def save_translation(message, english_word):
    user_id = message.from_user.id
    translation = message.text
    bot2_db.add_word_to_db(user_id, english_word, translation)
    bot.send_message(
        message.chat.id, f"–°–ª–æ–≤–æ '{english_word}' —Å –ø–µ—Ä–µ–≤–æ–¥–æ–º '{translation}' –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –≤–∞—à —Å–ª–æ–≤–∞—Ä–∏–∫!"
    )
    send_random_word(message)


@bot.message_handler(func=lambda message: message.text == 'üîô –£–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–æ')
def delete_word(message):
    user_id = message.from_user.id
    user_words = bot2_db.get_words_from_db(user_id)

    if not user_words:
        bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ—Ç —Å–ª–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.')
        return

    words_list = "\n".join([f"{eng} - {rus}" for eng, rus in user_words])
    bot.send_message(message.chat.id, f"–í–∞—à–∏ —Å–ª–æ–≤–∞:\n{words_list}\n\n–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:")
    bot.register_next_step_handler(message, confirm_delete_word)


def confirm_delete_word(message):
    user_id = message.from_user.id
    english_word = message.text

    user_words = bot2_db.get_words_from_db(user_id)
    if english_word not in [word[0] for word in user_words]:
        bot.send_message(message.chat.id, f"–°–ª–æ–≤–æ '{english_word}' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –≤–∞—à–µ–º —Å–ª–æ–≤–∞—Ä–µ.")
        return

    bot2_db.remove_word_from_db(user_id, english_word)
    bot.send_message(message.chat.id, f"–°–ª–æ–≤–æ '{english_word}' —É–¥–∞–ª–µ–Ω–æ –∏–∑ –≤–∞—à–µ–≥–æ —Å–ª–æ–≤–∞—Ä–∏–∫–∞!")


@bot.message_handler(func=lambda message: True)
def check_answer(message):
    user_id = message.from_user.id
    target_word = user_answers.get(user_id)

    if message.text.strip().lower() == target_word.strip().lower():
        bot.send_message(message.chat.id, '–ü—Ä–∞–≤–∏–ª—å–Ω–æ! üéâ')
        example = get_usage_example(target_word)
        if example:
            bot.send_message(message.chat.id, f"<b>–ü—Ä–∏–º–µ—Ä</b> üìñ: <i>{example}</i>", parse_mode="HTML")
        send_random_word(message)
    else:
        bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ ‚ùå –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.')


if __name__ == '__main__':
    print('Bot is running!')
    bot.infinity_polling(skip_pending=True)